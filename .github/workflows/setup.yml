name: Pyomo Environment Setup

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
  workflow_dispatch:
    inputs:
      git-ref:
        description: Git Hash (Optional)
        required: false

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash -l {0}

env:
  PYTHONWARNINGS: ignore::UserWarning
  PYTHON_CORE_PKGS: wheel
  PYPI_ONLY: z3-solver
  PYPY_EXCLUDE: scipy numdifftools seaborn statsmodels
  CACHE_VER: v221013.1
  NEOS_EMAIL: tests@pyomo.org
  SRC_REF: ${{ github.head_ref || github.ref }}

jobs:
  build:
    name: ${{ matrix.TARGET }}/${{ matrix.python }}${{ matrix.other }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python: [ '3.12' ]
        other: [""]
        category: [""]

        include:
        - os: ubuntu-latest
          python: '3.12'
          TARGET: linux
          PYENV: pip

        - os: macos-13
          python: '3.10'
          TARGET: osx
          PYENV: pip

        - os: windows-latest
          python: 3.9
          TARGET: win
          PYENV: conda
          PACKAGES: glpk pytest-qt filelock

        - os: ubuntu-latest
          python: '3.11'
          other: /conda
          skip_doctest: 1
          TARGET: linux
          PYENV: conda
          PACKAGES: pytest-qt

        - os: ubuntu-latest
          python: '3.10'
          other: /mpi
          mpi: 3
          skip_doctest: 1
          TARGET: linux
          PYENV: conda
          PACKAGES: openmpi mpi4py

        - os: ubuntu-latest
          python: '3.10'
          other: /cython
          setup_options: --with-cython
          skip_doctest: 1
          TARGET: linux
          PYENV: pip
          PACKAGES: cython

        - os: windows-latest
          python: 3.8
          other: /pip
          skip_doctest: 1
          TARGET: win
          PYENV: pip

    steps:
    - name: Checkout Pyomo source
      uses: actions/checkout@v4
      with:
        repository: pyomo/pyomo

    - name: Checkout action source
      uses: actions/checkout@v4
      with:
        path: 'environment-action'

    - name: Environment check
      run: ls -la

    - name: Pyomo environment setup action
      uses: ./environment-action/
      with:
        target: ${{ matrix.TARGET }}
        python: ${{ matrix.python }}
        pyenv: ${{ matrix.PYENV }}
        packages: ${{ matrix.PACKAGES }}
        other: ${{ matrix.other }}
        slim: ${{ matrix.slim }}
